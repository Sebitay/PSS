Sistema operativo utilizado
Linux Seba-Desktop 5.15.133.1-microsoft-standard-WSL2 #1 SMP Thu Oct 5 21:02:42 UTC 2023 x86_64 GNU/Linux
==== run-san ====
gcc -g -DSAN=1 -fsanitize=address -fsanitize=undefined -Wall -Werror -pedantic -std=c18 -Wno-unused-function  test-viajante.c viajante.c -lm -o viajante.bin-san
./viajante.bin-san
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultados viajante: nperm=2000000 min=2.175692
0 1 2 4 5 3 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultados viajante: nperm=2000000 min=2.175692
0 1 2 4 5 3 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultados viajante: nperm=2000000 min=2.175692
0 1 2 4 5 3 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultados viajante: nperm=2000000 min=2.175692
0 1 2 4 5 3 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=11.582672
0 3 4 10 7 12 16 13 6 28 26 11 21 17 22 30 2 1 5 25 27 32 15 14 19 24 29 18 8 20 9 31 23 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=11.059455
0 22 5 32 9 8 2 29 19 21 15 25 16 20 18 12 31 13 7 30 24 1 10 28 26 6 17 3 14 4 11 27 23 0
Tiempo=5860

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.368133
0 1 16 7 27 5 9 18 21 19 3 10 4 13 28 26 15 22 23 25 30 17 31 12 6 11 2 29 32 8 24 20 14 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=11.582672
0 3 4 10 7 12 16 13 6 28 26 11 21 17 22 30 2 1 5 25 27 32 15 14 19 24 29 18 8 20 9 31 23 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=11.059455
0 22 5 32 9 8 2 29 19 21 15 25 16 20 18 12 31 13 7 30 24 1 10 28 26 6 17 3 14 4 11 27 23 0
Tiempo=5860

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.508187
0 27 14 4 13 15 11 23 12 31 5 3 25 10 7 32 2 21 18 30 1 8 20 24 29 19 16 26 28 6 17 22 9 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=11.582672
0 3 4 10 7 12 16 13 6 28 26 11 21 17 22 30 2 1 5 25 27 32 15 14 19 24 29 18 8 20 9 31 23 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=11.059455
0 22 5 32 9 8 2 29 19 21 15 25 16 20 18 12 31 13 7 30 24 1 10 28 26 6 17 3 14 4 11 27 23 0
Tiempo=5860

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.275122
0 3 7 10 14 6 4 26 17 23 31 25 9 5 8 20 21 29 24 27 19 2 1 18 30 32 11 15 16 12 13 28 22 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=11.582672
0 3 4 10 7 12 16 13 6 28 26 11 21 17 22 30 2 1 5 25 27 32 15 14 19 24 29 18 8 20 9 31 23 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=11.059455
0 22 5 32 9 8 2 29 19 21 15 25 16 20 18 12 31 13 7 30 24 1 10 28 26 6 17 3 14 4 11 27 23 0
Tiempo=5860

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=10.767228
0 10 7 3 2 24 25 23 32 11 16 22 31 12 13 26 15 8 18 29 9 1 30 21 19 14 6 28 20 27 5 17 4 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=11.582672
0 3 4 10 7 12 16 13 6 28 26 11 21 17 22 30 2 1 5 25 27 32 15 14 19 24 29 18 8 20 9 31 23 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=11.059455
0 22 5 32 9 8 2 29 19 21 15 25 16 20 18 12 31 13 7 30 24 1 10 28 26 6 17 3 14 4 11 27 23 0
Tiempo=5860

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=10.768762
0 25 7 19 18 23 30 32 8 1 9 5 31 4 13 28 26 24 20 29 27 22 3 11 15 14 21 2 10 6 17 12 16 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=11.582672
0 3 4 10 7 12 16 13 6 28 26 11 21 17 22 30 2 1 5 25 27 32 15 14 19 24 29 18 8 20 9 31 23 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=11.059455
0 22 5 32 9 8 2 29 19 21 15 25 16 20 18 12 31 13 7 30 24 1 10 28 26 6 17 3 14 4 11 27 23 0
Tiempo=5860

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=10.678741
0 22 18 32 23 16 13 4 31 6 26 17 28 19 27 5 9 2 1 8 21 15 14 7 25 10 11 29 20 24 30 12 3 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=11.582672
0 3 4 10 7 12 16 13 6 28 26 11 21 17 22 30 2 1 5 25 27 32 15 14 19 24 29 18 8 20 9 31 23 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=11.059455
0 22 5 32 9 8 2 29 19 21 15 25 16 20 18 12 31 13 7 30 24 1 10 28 26 6 17 3 14 4 11 27 23 0
Tiempo=5860

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.381225
0 4 17 12 16 25 14 18 24 19 10 22 6 7 11 5 9 27 20 23 29 2 1 31 32 8 21 30 3 13 26 28 15 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=11.582672
0 3 4 10 7 12 16 13 6 28 26 11 21 17 22 30 2 1 5 25 27 32 15 14 19 24 29 18 8 20 9 31 23 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=11.059455
0 22 5 32 9 8 2 29 19 21 15 25 16 20 18 12 31 13 7 30 24 1 10 28 26 6 17 3 14 4 11 27 23 0
Tiempo=5860

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.616522
0 6 27 8 32 9 5 28 26 4 18 1 20 2 31 17 12 22 25 16 15 7 10 3 21 19 24 29 30 13 14 23 11 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=11.582672
0 3 4 10 7 12 16 13 6 28 26 11 21 17 22 30 2 1 5 25 27 32 15 14 19 24 29 18 8 20 9 31 23 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=11.059455
0 22 5 32 9 8 2 29 19 21 15 25 16 20 18 12 31 13 7 30 24 1 10 28 26 6 17 3 14 4 11 27 23 0
Tiempo=5860

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultado final: Tiempo=1136 speedup=5.158451 distancia minima=10.678741
0 22 18 32 23 16 13 4 31 6 26 17 28 19 27 5 9 2 1 8 21 15 14 7 25 10 11 29 20 24 30 12 3 0
Test 2 aprobado: speedup >= 1.5x

Felicitaciones: su tarea funciona
==== run-g ====
gcc -g -Wall -Werror -pedantic -std=c18 -Wno-unused-function  test-viajante.c viajante.c -lm -o viajante.bin-g
./viajante.bin-g
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultados viajante: nperm=2000000 min=2.175692
0 1 2 4 5 3 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultados viajante: nperm=2000000 min=2.175692
0 1 2 4 5 3 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultados viajante: nperm=2000000 min=2.175692
0 1 2 4 5 3 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultados viajante: nperm=2000000 min=2.175692
0 1 2 4 5 3 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.240040
0 27 8 13 4 12 10 14 17 16 22 26 9 31 25 11 29 32 28 3 6 5 15 24 21 20 7 2 19 1 23 18 30 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=10.859892
0 13 7 15 23 19 24 18 2 6 30 4 5 11 29 26 9 10 1 17 31 28 25 27 22 32 20 14 12 21 16 3 8 0
Tiempo=3035

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.561775
0 27 3 23 31 25 26 29 10 1 14 6 11 28 20 24 21 15 2 30 5 4 22 8 13 17 9 32 19 16 18 7 12 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.240040
0 27 8 13 4 12 10 14 17 16 22 26 9 31 25 11 29 32 28 3 6 5 15 24 21 20 7 2 19 1 23 18 30 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=10.859892
0 13 7 15 23 19 24 18 2 6 30 4 5 11 29 26 9 10 1 17 31 28 25 27 22 32 20 14 12 21 16 3 8 0
Tiempo=3035

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.292320
0 13 32 27 2 20 16 22 18 30 12 29 1 17 10 5 15 28 25 19 3 8 11 14 9 6 4 26 31 23 7 21 24 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.240040
0 27 8 13 4 12 10 14 17 16 22 26 9 31 25 11 29 32 28 3 6 5 15 24 21 20 7 2 19 1 23 18 30 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=10.859892
0 13 7 15 23 19 24 18 2 6 30 4 5 11 29 26 9 10 1 17 31 28 25 27 22 32 20 14 12 21 16 3 8 0
Tiempo=3035

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.767575
0 32 9 12 25 31 20 11 10 26 2 18 27 8 13 22 3 6 30 19 28 23 7 17 1 5 4 15 24 21 16 14 29 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.240040
0 27 8 13 4 12 10 14 17 16 22 26 9 31 25 11 29 32 28 3 6 5 15 24 21 20 7 2 19 1 23 18 30 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=10.859892
0 13 7 15 23 19 24 18 2 6 30 4 5 11 29 26 9 10 1 17 31 28 25 27 22 32 20 14 12 21 16 3 8 0
Tiempo=3035

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.890116
0 19 7 16 30 4 9 6 12 18 23 17 29 10 14 1 32 8 13 27 3 22 25 26 5 21 15 24 2 20 28 31 11 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.240040
0 27 8 13 4 12 10 14 17 16 22 26 9 31 25 11 29 32 28 3 6 5 15 24 21 20 7 2 19 1 23 18 30 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=10.859892
0 13 7 15 23 19 24 18 2 6 30 4 5 11 29 26 9 10 1 17 31 28 25 27 22 32 20 14 12 21 16 3 8 0
Tiempo=3035

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=10.872094
0 27 8 13 32 23 21 7 25 19 5 14 9 1 10 26 11 29 22 16 15 20 6 2 17 12 30 24 31 3 28 18 4 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.240040
0 27 8 13 4 12 10 14 17 16 22 26 9 31 25 11 29 32 28 3 6 5 15 24 21 20 7 2 19 1 23 18 30 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=10.859892
0 13 7 15 23 19 24 18 2 6 30 4 5 11 29 26 9 10 1 17 31 28 25 27 22 32 20 14 12 21 16 3 8 0
Tiempo=3035

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.726018
0 13 29 9 11 4 1 26 14 20 18 5 24 7 3 25 8 31 23 15 2 28 32 6 21 30 16 19 22 27 17 10 12 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.240040
0 27 8 13 4 12 10 14 17 16 22 26 9 31 25 11 29 32 28 3 6 5 15 24 21 20 7 2 19 1 23 18 30 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=10.859892
0 13 7 15 23 19 24 18 2 6 30 4 5 11 29 26 9 10 1 17 31 28 25 27 22 32 20 14 12 21 16 3 8 0
Tiempo=3035

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.754965
0 13 32 8 23 25 2 11 22 26 29 9 30 20 18 24 7 19 21 16 4 6 12 1 17 15 31 27 5 14 10 28 3 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.240040
0 27 8 13 4 12 10 14 17 16 22 26 9 31 25 11 29 32 28 3 6 5 15 24 21 20 7 2 19 1 23 18 30 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=10.859892
0 13 7 15 23 19 24 18 2 6 30 4 5 11 29 26 9 10 1 17 31 28 25 27 22 32 20 14 12 21 16 3 8 0
Tiempo=3035

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.716540
0 21 8 12 10 11 17 26 29 32 13 27 3 15 20 24 5 30 18 23 28 25 19 22 7 6 9 14 1 4 16 2 31 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.240040
0 27 8 13 4 12 10 14 17 16 22 26 9 31 25 11 29 32 28 3 6 5 15 24 21 20 7 2 19 1 23 18 30 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=10.859892
0 13 7 15 23 19 24 18 2 6 30 4 5 11 29 26 9 10 1 17 31 28 25 27 22 32 20 14 12 21 16 3 8 0
Tiempo=3035

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultado final: Tiempo=578 speedup=5.250865 distancia minima=10.872094
0 27 8 13 32 23 21 7 25 19 5 14 9 1 10 26 11 29 22 16 15 20 6 2 17 12 30 24 31 3 28 18 4 0
Test 2 aprobado: speedup >= 1.5x

Felicitaciones: su tarea funciona
==== run ====
gcc -O -DOPT=1 -Wall -Werror -pedantic -std=c18 -Wno-unused-function  test-viajante.c viajante.c -lm -o viajante.bin
./viajante.bin
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultados viajante: nperm=2000000 min=2.175692
0 1 2 4 5 3 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultados viajante: nperm=2000000 min=2.175692
0 1 2 4 5 3 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultados viajante: nperm=2000000 min=2.175692
0 1 2 4 5 3 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultados viajante: nperm=2000000 min=2.175692
0 1 2 4 5 3 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.148837
0 19 13 10 7 16 21 30 24 32 27 25 15 26 1 12 17 29 3 9 23 31 2 4 22 5 28 6 8 11 18 14 20 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=10.886532
0 2 27 32 28 6 12 3 18 24 9 31 8 1 22 4 15 5 11 7 19 10 13 17 16 21 20 23 25 14 30 29 26 0
Tiempo=1689

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.667947
0 32 8 16 19 20 21 12 28 6 17 7 9 1 10 5 26 25 15 22 30 31 14 13 18 24 11 27 4 3 29 23 2 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.148837
0 19 13 10 7 16 21 30 24 32 27 25 15 26 1 12 17 29 3 9 23 31 2 4 22 5 28 6 8 11 18 14 20 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=10.886532
0 2 27 32 28 6 12 3 18 24 9 31 8 1 22 4 15 5 11 7 19 10 13 17 16 21 20 23 25 14 30 29 26 0
Tiempo=1689

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.654957
0 27 12 8 15 4 1 14 31 16 25 2 23 24 28 6 10 7 32 29 26 5 22 19 21 13 20 17 9 30 3 11 18 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.148837
0 19 13 10 7 16 21 30 24 32 27 25 15 26 1 12 17 29 3 9 23 31 2 4 22 5 28 6 8 11 18 14 20 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=10.886532
0 2 27 32 28 6 12 3 18 24 9 31 8 1 22 4 15 5 11 7 19 10 13 17 16 21 20 23 25 14 30 29 26 0
Tiempo=1689

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=12.292920
0 12 24 22 25 2 15 30 27 4 21 17 23 26 3 28 1 32 5 29 8 11 14 9 31 16 20 7 13 19 10 6 18 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.148837
0 19 13 10 7 16 21 30 24 32 27 25 15 26 1 12 17 29 3 9 23 31 2 4 22 5 28 6 8 11 18 14 20 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=10.886532
0 2 27 32 28 6 12 3 18 24 9 31 8 1 22 4 15 5 11 7 19 10 13 17 16 21 20 23 25 14 30 29 26 0
Tiempo=1689

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.355670
0 28 8 23 29 15 11 5 12 31 26 2 1 10 17 21 16 9 30 25 4 22 3 14 19 7 13 20 18 24 6 27 32 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.148837
0 19 13 10 7 16 21 30 24 32 27 25 15 26 1 12 17 29 3 9 23 31 2 4 22 5 28 6 8 11 18 14 20 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=10.886532
0 2 27 32 28 6 12 3 18 24 9 31 8 1 22 4 15 5 11 7 19 10 13 17 16 21 20 23 25 14 30 29 26 0
Tiempo=1689

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.013774
0 23 7 10 27 6 18 29 32 12 28 8 20 21 19 17 13 24 5 15 9 14 16 31 30 25 2 1 4 22 26 11 3 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.148837
0 19 13 10 7 16 21 30 24 32 27 25 15 26 1 12 17 29 3 9 23 31 2 4 22 5 28 6 8 11 18 14 20 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=10.886532
0 2 27 32 28 6 12 3 18 24 9 31 8 1 22 4 15 5 11 7 19 10 13 17 16 21 20 23 25 14 30 29 26 0
Tiempo=1689

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.802399
0 23 18 13 16 11 29 17 19 10 7 8 14 30 31 15 9 3 26 22 5 2 1 4 25 28 12 32 6 20 21 27 24 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.148837
0 19 13 10 7 16 21 30 24 32 27 25 15 26 1 12 17 29 3 9 23 31 2 4 22 5 28 6 8 11 18 14 20 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=10.886532
0 2 27 32 28 6 12 3 18 24 9 31 8 1 22 4 15 5 11 7 19 10 13 17 16 21 20 23 25 14 30 29 26 0
Tiempo=1689

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.642665
0 24 18 13 7 21 6 8 27 12 28 2 15 4 22 5 25 29 26 30 16 31 23 17 20 10 9 32 1 3 14 11 19 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.148837
0 19 13 10 7 16 21 30 24 32 27 25 15 26 1 12 17 29 3 9 23 31 2 4 22 5 28 6 8 11 18 14 20 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=10.886532
0 2 27 32 28 6 12 3 18 24 9 31 8 1 22 4 15 5 11 7 19 10 13 17 16 21 20 23 25 14 30 29 26 0
Tiempo=1689

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.179363
0 23 11 5 31 27 29 28 18 8 6 3 9 30 32 1 4 26 15 25 14 24 12 20 19 7 21 16 10 13 17 22 2 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.148837
0 19 13 10 7 16 21 30 24 32 27 25 15 26 1 12 17 29 3 9 23 31 2 4 22 5 28 6 8 11 18 14 20 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=10.886532
0 2 27 32 28 6 12 3 18 24 9 31 8 1 22 4 15 5 11 7 19 10 13 17 16 21 20 23 25 14 30 29 26 0
Tiempo=1689

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultado final: Tiempo=321 speedup=5.261682 distancia minima=11.013774
0 23 7 10 27 6 18 29 32 12 28 8 20 21 19 17 13 24 5 15 9 14 16 31 30 25 2 1 4 22 26 11 3 0
Test 2 aprobado: speedup >= 1.5x

Felicitaciones: su tarea funciona
